import os
import ember
import tensorflow as tf


def init_vectorized_features(dataset_dir):
    """
    Required for the generation of '.dat' data files

    :param dataset_dir: directory to the base location of the dataset
    :return:
    """
    ember.create_vectorized_features(dataset_dir, 1)


def dat_to_train_test(dat_dir):
    """
    Loading training & testing data from respective generated '.dat' files

    :param dat_dir: directory to the base location where generated '.dat' files are found
    :return:
    """
    try:
        assert('X_train.dat' in os.listdir(dat_dir))
        assert('y_train.dat' in os.listdir(dat_dir))
        assert ('X_test.dat' in os.listdir(dat_dir))
        assert ('y_test.dat' in os.listdir(dat_dir))

        x_train, y_train = ember.read_vectorized_features(dat_dir, subset="train")
        x_test, y_test = ember.read_vectorized_features(dat_dir, subset="test")

        return x_train, y_train, x_test, y_test
    except AssertionError:
        raise Exception("[ASSERTION ERROR] Ensure that the required '.dat' files are found within the specified directory")


# TODO: implement functionality to convert from existing <class 'numpy.memmap'> dtype to tensors
def to_tensor():
    """

    :return:
    """
    pass


if __name__ == '__main__':
    x_train, y_train, x_test, y_test = dat_to_train_test('./dat')
