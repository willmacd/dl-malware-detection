import tensorflow as tf


class MalwareDetection:
    def __init__(self):
        """
        Constructor for Malware Detection Neural Network model
        """
        self.__model = tf.keras.Sequential()
        # Input layer
        self.__model.add(tf.keras.Input(shape=(2381, )))
        # Hidden layers
        self.__model.add(tf.keras.layers.Dense(1584, activation='relu'))
        self.__model.add(tf.keras.layers.Dense(1057, activation='relu'))
        # Output layer
        self.__model.add(tf.keras.layers.Dense(1))

    def summary(self):
        """
        Output overview of model structure

        :return:
        """
        self.__model.summary()

    def train(self, train_ds, batch_size, epochs):
        """
        Training function for Malware Detection Neural Network model

        :return:
        """
        # Change loss function later
        self.__model.compile(optimizer='sgd', loss='mse')

        self.__model.fit(train_ds, batch_size=batch_size, epochs=epochs)

        # Should this have a return?
        #return self.__model

    def test(self, test_ds):
        """
        Testing function for Malware Detection Neural Network model

        :return:
        """
        return self.__model.evaluate(test_ds, verbose=1)
