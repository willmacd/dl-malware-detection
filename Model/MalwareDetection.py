import tensorflow as tf


class MalwareDetection:
    def __init__(self):
        """
        Constructor for Malware Detection Neural Network model
        """
        self.__model = tf.keras.Sequential()
        # Input layer
        self.__model.add(tf.keras.Input(shape=(2381, )))
        # Hidden layers
        self.__model.add(tf.keras.layers.Dense(1584, activation='relu'))
        self.__model.add(tf.keras.layers.Dense(1057, activation='relu'))
        # Output layer
        self.__model.add(tf.keras.layers.Dense(1))

    def summary(self):
        """
        Output overview of model structure

        :return:
        """
        self.__model.summary()

    def train(self):
        """
        TODO: write docstring
        TODO: create epochs and batchsize as parameters to this rather than to the model constructor
        TODO: write functionality

        :return:
        """
        # Change loss function later
        self.__model.compile(optimizer='sgd', loss='mse')
        pass

    def test(self):
        """
        TODO: write docstring
        TODO: write functionality

        :return:
        """
        pass
